plugins {
    id "java-gradle-plugin"
    id "org.jetbrains.kotlin.jvm" version "1.5.21"
    id "maven-publish"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

ext {
    def env = System.getenv()
    local = !env.GITHUB_ACTIONS
    branch = "git rev-parse --abbrev-ref HEAD".execute().text
    buildNumber = env.BUILD_NUMBER
}

group "me.dreamhopping.pml"
version "3.14.0"

sourceSets {
    runtime {

    }
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.fabricmc.net"
    }
    maven {
        url "https://maven.bookmc.org/releases/"
    }
}

configurations {
    runtimeImplementation.extendsFrom(runtimeInclude)
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    implementation gradleApi()
    implementation "com.google.code.gson:gson:2.8.8"
    implementation "org.ow2.asm:asm-tree:9.2"
    implementation "org.ow2.asm:asm-commons:9.2"
    compileOnly "net.fabricmc:fabric-fernflower:1.3.0"
    implementation sourceSets.runtime.runtimeClasspath

    runtimeInclude "com.google.code.gson:gson:2.8.8"
    runtimeInclude "org.apache.httpcomponents:httpclient:4.3.3"
    runtimeInclude "commons-io:commons-io:2.5"
    runtimeImplementation "org.apache.logging.log4j:log4j-api:2.14.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "net.fabricmc:tiny-mappings-parser:0.3.0+build.17"
    implementation "org.bookmc:srg-processor:2.0.1+jdk.16"
}

test {
    useJUnitPlatform()
}

task runtimeJar(type: Jar, dependsOn: runtimeClasses) {
    from sourceSets.runtime.output
    from configurations.runtimeInclude.collect { it.isDirectory() ? it : zipTree(it) }

    classifier "runtime"
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    manifest.attributes(
            "Implementation-Version": project.version
    )
}

task runtimeSourcesJar(type: Jar) {
    dependsOn "classes", "runtimeClasses"
    from sourceSets.runtime.allSource
    classifier "runtime-sources"
}

jar {
    dependsOn "runtimeJar", "runtimeSourcesJar"
    from sourceSets.main.output, sourceSets.runtime.output
    manifest.attributes(
            "Implementation-Vendor": project.group,
            "Implementation-Version": project.version,
            "Implementation-Title": project.name
    )
    from project.tasks.runtimeJar, project.tasks.runtimeSourcesJar
}

java {
    withSourcesJar()
}

artifacts {
    archives runtimeJar
    archives sourcesJar
}

gradlePlugin {
    plugins {
        pufferfishGradle {
            id = "me.dreamhopping.pml.gradle"
            implementationClass = "me.dreamhopping.pml.gradle.PufferfishGradle"
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "16"
    }
}

publishing {
    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "PufferfishGradle"
                url = "https://github.com/BookMC/PufferfishGradle"
            }
        }
    }
}
