plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id 'maven-publish'
}

java {
    toolchain {
        language = JavaLanguageVersion.of(16)
    }
}

ext {
    def env = System.getenv()
    local = !env.GITHUB_ACTIONS
    branch = "git rev-parse --abbrev-ref HEAD".execute().text
}

group 'me.dreamhopping.pml'
version "0.3.0${local ? "-local" : ""}"

sourceSets {
    runtime {

    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.fabricmc.net'
    }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation gradleApi()
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.ow2.asm:asm-tree:9.0'
    implementation 'org.ow2.asm:asm-commons:9.0'
    compileOnly 'net.fabricmc:fabric-fernflower:1.3.0'
    implementation sourceSets.runtime.runtimeClasspath
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

test {
    useJUnitPlatform()
}

task runtimeJar(type: Jar, dependsOn: runtimeClasses) {
    from sourceSets.runtime.output
    classifier 'runtime'
    manifest.attributes(
            'Implementation-Version': project.version
    )
}

task runtimeSourcesJar(type: Jar) {
    dependsOn 'classes', 'runtimeClasses'
    from sourceSets.runtime.allSource
    classifier 'runtime-sources'
}

jar {
    dependsOn 'runtimeJar', 'runtimeSourcesJar'
    from sourceSets.main.output, sourceSets.runtime.output
    manifest.attributes(
            'Implementation-Vendor': project.group,
            'Implementation-Version': project.version,
            'Implementation-Title': project.name
    )
    from project.tasks.runtimeJar, project.tasks.runtimeSourcesJar
}

java {
    withSourcesJar()
}

artifacts {
    archives runtimeJar
    archives sourcesJar
}

gradlePlugin {
    plugins {
        pufferfishGradle {
            id = 'me.dreamhopping.pml.gradle'
            implementationClass = 'me.dreamhopping.pml.gradle.PufferfishGradle'
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

publishing {
    repositories {
        maven {
            def env = System.getenv()

            boolean isEnvVarsAvailable = env.containsKey("MAVEN_USER") && env.containsKey("MAVEN_PASSWORD")

            if (isEnvVarsAvailable) {
                credentials {
                    username env.get("MAVEN_USER")
                    password env.get("MAVEN_PASSWORD")
                }
            }

            url = local || !isEnvVarsAvailable ? "$buildDir/repository" : "https://maven.bookmc.org/releases/"
        }
    }

    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "PufferfishGradle"
                url = "https://github.com/BookMC/PufferfishGradle"
            }
        }
    }
}